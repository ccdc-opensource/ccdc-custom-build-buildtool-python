steps:
# Build using whatever the parent task provides us
- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: build_python.py
  displayName: 'install bt_python'

- task: ArtifactoryCollectIssues@1
  inputs:
    artifactoryService: 'devops-ccdc-3rd-party'
    configSource: 'taskConfiguration'
    taskConfig: |
      version: 1
      issues:
        trackerName: JIRA
        regexp: '(.*?)\b\(?(Jira|JIRA|jira)?\s+([A-Za-z]{2,5}\d*-\d+)\)?'
        keyGroupIndex: 3
        summaryGroupIndex: 1
        trackerUrl: https://jira.ccdc.cam.ac.uk/issues
        aggregate: true
        aggregationStatus: RELEASED
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)-$(artifactory.platformName)'
  displayName: 'Collect issues'

- powershell: |
    $filename = Get-ChildItem -Path $(Build.ArtifactStagingDirectory) -Filter *.tar.gz | Select-Object -ExpandProperty Name
    Write-Host "Filename: $filename"
    if ($filename -match "bt_python-([0-9]+\.[0-9]+)") {
      $PythonVersion = $Matches[1]
      Write-Host "Python version: $PythonVersion"
      Write-Host "##vso[task.setvariable variable=PythonVersion]$PythonVersion"
    }
    else {
      Write-Error "Unable to extract Python version from filename"
    }
  displayName: 'Extract Python version'

# Upload artifactory build info
- task: ArtifactoryGenericUpload@2
  inputs:
    artifactoryService: 'devops-ccdc-3rd-party'
    specSource: 'taskConfiguration'
    fileSpec: |
      {
        "files": [
          {
            "pattern": "$(Build.ArtifactStagingDirectory)/*.tar.gz",
            "target": "ccdc-3rdparty-python-interpreters/bt_python/$(PythonVersion)/"
          }
        ]
      }
    replaceSpecVars: true
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)-$(artifactory.platformName)'
    module: 'bt_python/$(artifactory.platformName)'
    includeEnvVars: true
    failNoOp: true
  displayName: 'Upload distribution to artifactory'

- task: ArtifactoryPublishBuildInfo@1
  inputs:
    artifactoryService: 'devops-ccdc-3rd-party'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)-$(artifactory.platformName)'
    excludeEnvVars: '*password*;*secret*;*key*;*token*'
  displayName: 'Publish build'
